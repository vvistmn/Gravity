body {
    font-family: 'Fira Sans', sans-serif;
    color: #8d8d8d;
    font-size: 18px;
}
/* Указали, какой шрифт использовали. Указали цвет текста, на всем сайте, кроме элементов, где мы прописали другой цвет. Размер шрифта 18 пикселей*/
button {
    display: block;
    background: transparent;
    border: none;
}
/* Определяется, как элемент будет отображаться в документе: блок определяет блочный элемент и позволяет перенести его с одной стороны в другую (c его помощью можем переносить элементы с одного конца границы в другой). Отображает фон: прозрачный. Обозначение границ: отсутствует */
.be-static {
    position: static;
}
/* Элементы отображаются как обычно. Использование свойств left, top, right и bottom не приводит к каким-либо результатам. */
h1, h2, h3, h4, h5, h6 {
    font-style: normal;
    font-weight: 700;
    color: #151515;
    margin: 0;
    padding: 0;
}
/* Перечислили все заголовки. Определили стиль текста, нормальный без курсива и тд. Ширина текста будет 900 (буквы будут тостыми). Определили цвет текста. Обнулили все отступы */
.btn {
    background: #4737ff;
    color: #fff;
    text-transform: uppercase;
    font-weight: 500;
    font-size: 14px;
    padding: 13px 26px;
    display: inline;
    border-radius: 0;
    letter-spacing: .2em;
    text-align: center;
    transition: all .5s ease;
}
/* Указали фон кнопки синий и цвет текста белый. Все буквы будут заглавными. Толщина букв будет 500 и размер 14 пикселей. Внутренние отступы сверху и снизу 13 пикселей, слева и справа 26 пикселей. Значение inline отменяет эту особенность, поэтому содержимое блочных элементов начинается с того места, где окончился предыдущий элемент. Округление углов. Указали интервал между символами. Определили горизонтальное выравнивание текста в пределах элемента. Устанавливает эффект перехода между двумя состояниями элемента, они могут быть определены с помощью псевдоэлемента :hover или :active, а также динамически через JavaScript.*/
.btn:hover {
    background: #3726F2;
    color: #fff
}
/* Укажем свойста при наведении на него курсора Указали фон кнопки синий и цвет текста белый.*/
.nav {
    margin-top: 59px;
    margin-bottom: 127px
}
/* Внешний отступ элемента от верхней и нижней границы другого элемента */

.offer-cont__title {
    font-size: 48px;
    letter-spacing: 0em;
    line-height: 1.2em;
}
/* Отображает фон: прозрачный. Обозначение границ: отсутствует. Указали интервал между символами. Указали высоту строки*/
.offer-cont__text {
    margin: 30px 0 56px;
}
/* Обозначили границы */
.hero {
    background: url(../img/img1.jpg) no-repeat right top;
    background-size: 80% 100%;
    height: 840px;
    width: 700px;
    position: absolute;
    right: 0;
    top: 142px;
}
 /* Указали фон блока, сделали, чтобы не повторялось изображение и указали, правый верхний угол. Указали размер, который будет занимать. Высоту и ширину картинки. Указывает, что элемент абсолютно позиционирован, при этом другие элементы отображаются на веб-странице словно абсолютно позиционированного элемента и нет. Положение элемента задается свойствами left, top, right и bottom, также на положение влияет значение свойства position родительского элемента. Так, если у родителя значение position установлено как static или родителя нет, то отсчет координат ведется от края окна браузера. Позиционирует себя с самой крайней правой точки и отступ сверху 142пикс.*/
 .video {
     position: absolute;
     left: 0;
     bottom: 166px;
     width: 400px;
     height: 310px;
     display: block;
     background: url(../img/video.jpg);
     display: flex;
     justify-content: center;
     align-items: center;
 }
 /* Указывает, что элемент абсолютно позиционирован, при этом другие элементы отображаются на веб-странице словно абсолютно позиционированного элемента и нет. Положение элемента задается свойствами left, top, right и bottom, также на положение влияет значение свойства position родительского элемента. */
 .video::after {
     content: '';
     display: block;
     background: url(../img/play.svg);
     width: 65px;
     height: 65px;
 }