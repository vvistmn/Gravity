body {
    font-family: 'Fira Sans', sans-serif;
    color: #8d8d8d;
    font-size: 18px;
}/* Указали, какой шрифт использовали. Указали цвет текста, на всем сайте, кроме элементов, где мы прописали другой цвет. Размер шрифта 18 пикселей*/
.header {
    height: 95vh;
}/* Указали, что верхушка занимает экран полностью*/
button {
    display: block;
    background: transparent;
    border: none;
}/* Определяется, как элемент будет отображаться в документе: блок определяет блочный элемент и позволяет перенести его с одной стороны в другую (c его помощью можем переносить элементы с одного конца границы в другой). Отображает фон: прозрачный. Обозначение границ: отсутствует */
ul, li {
    display: block;
    padding: 0;
    margin: 0;
}/* Убрали стандартные отступы и точки, превратили их в блочный элемент, который идет друг за другом */
.vh-dependent {
    height: 35vh;
    display: flex;
    align-items: center;
}/*Указали, что элементы с классом будут заниматься 80 процентов экрана. Указали, что это флекс-контейнер и весь контент будет находиться по центру*/

.be-static {
    position: static;
}/* Элементы отображаются как обычно. Использование свойств left, top, right и bottom не приводит к каким-либо результатам. */
h1, h2, h3, h4, h5, h6 {
    font-style: normal;
    font-weight: 700;
    color: #151515;
    margin: 0;
    padding: 0;
}/* Перечислили все заголовки. Определили стиль текста, нормальный без курсива и тд. Ширина текста будет 900 (буквы будут тостыми). Определили цвет текста. Обнулили все отступы */
h2 {
    font-size: 38px;
}
.btn {
    background: #4737ff;
    color: #fff;
    text-transform: uppercase;
    font-weight: 500;
    font-size: 14px;
    padding: 13px 26px;
    display: inline;
    border-radius: 0;
    letter-spacing: .2em;
    text-align: center;
    transition: all .5s ease;
}/* Указали фон кнопки синий и цвет текста белый. Все буквы будут заглавными. Толщина букв будет 500 и размер 14 пикселей. Внутренние отступы сверху и снизу 13 пикселей, слева и справа 26 пикселей. Значение inline отменяет эту особенность, поэтому содержимое блочных элементов начинается с того места, где окончился предыдущий элемент. Округление углов. Указали интервал между символами. Определили горизонтальное выравнивание текста в пределах элемента. Устанавливает эффект перехода между двумя состояниями элемента, они могут быть определены с помощью псевдоэлемента :hover или :active, а также динамически через JavaScript.*/
.btn:hover {
    background: #3726F2;
    color: #fff
}/* Укажем свойста при наведении на него курсора Указали фон кнопки синий и цвет текста белый.*/
.nav {
    margin-top: 59px;
    margin-bottom: 127px
}/* Внешний отступ элемента от верхней и нижней границы другого элемента */
.offer-cont__title {
    font-size: 48px;
    letter-spacing: 0em;
    line-height: 1.2em;
}/* Отображает фон: прозрачный. Обозначение границ: отсутствует. Указали интервал между символами. Указали высоту строки*/
.offer-cont__text {
    margin: 30px 0 56px;
}/* Обозначили границы */
.hero {
    background: url(../img/img1.jpg) no-repeat right top;
    background-size: 80% 100%;
    height: 80vh;
    width: 50%;
    position: absolute;
    right: 0;
    top: 142px;
}/* Указали фон блока, сделали, чтобы не повторялось изображение и указали, правый верхний угол. Указали размер, который будет занимать. Высоту и ширину картинки. Указывает, что элемент абсолютно позиционирован, при этом другие элементы отображаются на веб-странице словно абсолютно позиционированного элемента и нет. Положение элемента задается свойствами left, top, right и bottom, также на положение влияет значение свойства position родительского элемента. Так, если у родителя значение position установлено как static или родителя нет, то отсчет координат ведется от края окна браузера. Позиционирует себя с самой крайней правой точки и отступ сверху 142пикс.*/
 .video {
     position: absolute;
     left: 0;
     bottom: 20%;
     width: 40%;
     height: 35%;
     display: block;
     background: url(../img/video.jpg) no-repeat center center;
     display: flex;
     justify-content: center;
     align-items: center;
 }/* Указывает, что элемент абсолютно позиционирован, при этом другие элементы отображаются на веб-странице словно абсолютно позиционированного элемента и нет. Положение элемента задается свойствами left, top, right и bottom, также на положение влияет значение свойства position родительского элемента. репит отвечает за повторение картинки, а центр отвечает, что она всегда будет отобрать центр Дисплэй флекс отвечает за возможность перестановки псевдоэлемента афтер. JC указывается, что элемент будет находиться по центру горизонтал, а AI по вертикали */
 .video::after {
    content: '';
     display: block;
     background: url(../img/play.svg);
     width: 65px;
     height: 65px;
 }/* Указали, что к элемент video добавили иконку размером в 65 пикселей Контент необходим для отображения элемента, в данном случае бекграунда */
 .problems {
     padding-top: 137px;
 }/* указали внутренний отступ сверху */
 .about-title {
     font-size: 38px;
     margin-bottom: 30px;
 }/*Указали размер шрифта*/
.about-author {
    background: url(../img/author.jpg) no-repeat left center;
    padding: 7px 0 7px 96px;
    margin-top: 61px;
}/*Указали фон блока, сделали, чтобы картинка не повторялась. Определили ее место положение: по вертикали слева. центр*/
.about-name {
    font-size: 22px;
}
.about-dop {
    margin-bottom: 0;
}
.services {
    padding-top: 142px;
}
.section-title-label {
    text-transform: uppercase;
    font-size: 14px;
    letter-spacing: .15em;
    color: #8f8f8f;
    margin-bottom: 40px; 
}/* Указали, что буквы будут заглавные. Размер шрифта 14 пикселей. Размер между буквами .. */
.serv-list{
    color: #8d8d8d;
    margin-top: 67px;
}
.serv-list__item {
    margin-bottom: 20px;
}
.serv-list__left {
    margin-left: 37px;
}
.owl-carousel {
    margin-top: 99px;
}
.owl-carousel .owl-theme .item {
    width: 825px !important;
    position: relative;
}/* Тут мы указывали размер картинки и то, что этот элемент родитель для значка плэй owl-carousel__play*/
.owl-theme .owl-dots, .owl-theme .owl-nav {
    text-align: left;
}/* Указали, что стрелочки должны быть внизу*/
.owl-theme .owl-nav [class*=owl-] {
    margin: 0;
}
.owl-nav {
    margin-top: 50px !important;
}/* Опустили стрелочки вниз на 50 пикселей */
.owl-carousel .owl-prev {
    margin-right: 20px !important;
}/* указали длину между ними */
.owl-carousel__play {
    display: block;
    background: url(../img/play.svg);
    width: 65px;
    height: 65px;
    position: absolute;
    left: 50%;
    top: 50%;
    margin-left: -32.5px;
    margin-top: -32.5px;
    cursor: pointer;
}/*Определили все характеристики значка плэй*/
.result {
    padding-top: 219px;
}
.collage {
    padding-top: 219px;
    width: 55%;
    height: 540px;
    background: url(../img/img6.jpg) no-repeat left top / 80% 70%;
    position: absolute;
    left: 0;
}/* Указали отступ сверху, ширину картинки, добавили фон, указали, чтобы не повторялась картинка и крайне лево-вверхнее положение и размер фона 80% на 100% от экрана. */
.collage img {
    display: block;
    width: 350px;
    height: 453px;
    position: absolute;
    right: 0;
    bottom: 0;
    box-shadow: 30px 80px 130px rgba(0,0,0,0.25);
}
.easy {
    margin-left: 65px;
    margin-top: 40px;
}
.easy-text {
    margin-bottom: 62px;
}
.easy-title {
    margin-bottom: 30px;
}
.easy__point {
    padding-left: 83px;
    text-transform: uppercase;
    letter-spacing: 0.2em;
    color: #000;
    font-weight: 500;
    font-size: 14px;
    padding-top: 20px;
    padding-bottom: 20px;
    margin-bottom: 25px;

}
.easy__pointer-first {
    background: url(../img/icon100.svg) no-repeat left center;
}

.easy__pointer-second {
    background: url(../img/bag.svg) no-repeat left center;
}
.works {
    padding-top: 283px;
}
.work-tabs {
    margin-left: 60px;
    font-size: 14px;
    text-transform: uppercase;
    letter-spacing: 0.2em;
    margin-top: 70px;
}
.work-tabs__item a {
    text-decoration: none;
    color: #8d8d8d;
}
.work-tabs__item.active a {
    color: #1434E1;
}
.works-wrap {
    flex-wrap: wrap;
    margin-top: 108px;
}/* Флексы выстраиваются в несколько строк, их направление задаётся свойством flex-direction.*/
.works-wrap__item {
    margin-bottom: 30px;
    position: relative;
}
.works-wrap__item img {
    transition: all 1s ease;
    display: block;
}/* Специально обратились к img, чтобы сделать transition*/
.works-wrap__item:hover img {
    box-shadow: -30px 80px 200px rgba(0,0,0,0.25);
    -moz-transform: scale(1.1) translate(0px, -20px);
    -webkit-transform: scale(1.1) translate(0px, -20px);
    -o-transform: scale(1.1) translate(0px, -20px);
    -ms-transform: scale(1.1) translate(0px, -20px);
    transform: scale(1.1) translate(0px, -20px);
}
.works-wrap__item:hover::after {
    content: ' ';
    display: block;
    background: url(../img/play.svg);
    width: 65px;
    height: 65px;
    position: absolute;
    left: 50%;
    top: 50%;
    margin-left: -32px;
    margin-top: -32px;
}
.tabs__content {
    display: none !important; /* по умолчанию прячем все блоки */
  }
.tabs__content.active {
    display: flex !important; /* по умолчанию показываем нужный блок */
  }